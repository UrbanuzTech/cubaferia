{"version":3,"sources":["components/generic/footer.tsx","components/generic/header.tsx","components/generic/nav_menu.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Footer","Header","NavMenu","App","e","preventDefault","className","id","pageWrapId","outerContainerId","disableAutoFocus","href","target","rel","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8RAQeA,G,MANU,WACrB,OACI,gCCIOC,EANU,WACrB,OACI,+BCIOC,EANW,WACtB,OACI,+B,OC0EOC,E,qLA9DEC,GACTA,EAAEC,mB,+BAIF,OAGI,yBAAKC,UAAU,OAEX,yBAAKC,GAAG,mBAEJ,kBAAC,aAAD,CAAMC,WAAY,YAAaC,iBAAkB,kBAAmBC,kBAAgB,GAChF,yBAAKJ,UAAU,QACX,uBAAGA,UAAU,QAAb,aACA,uBAAGA,UAAU,WACVK,KAAK,2CACLC,OAAO,SACPC,IAAI,uBACH,uBAAGP,UAAU,gBAAb,KAAiC,6BAJrC,WAQJ,uBAAGC,GAAG,OAAOD,UAAU,UAAUK,KAAK,KAAtC,sBAA6D,uBACzDL,UAAU,yBAD+C,MAE7D,uBAAGC,GAAG,QAAQD,UAAU,UAAUK,KAAK,KAAvC,oBAA4D,uBACxDL,UAAU,gBAD8C,MAE5D,uBAAGC,GAAG,UAAUD,UAAU,UAAUK,KAAK,KAAzC,yBAGJ,0BAAMJ,GAAG,aAEL,kBAAC,EAAD,MAEA,4BAAQD,UAAU,cACd,yBAAKA,UAAU,QACX,yBAAKA,UAAU,QACX,wCACA,uBAAGA,UAAU,WACVK,KAAK,2CACLC,OAAO,SACPC,IAAI,uBACH,uBAAGP,UAAU,gBAAb,KAAiC,6BAJrC,aAWZ,kBAAC,EAAD,MAEA,kBAAC,EAAD,a,GA1DNQ,IAAMC,WCGlBC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA8CN,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,K,YCjGjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDoB1C,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAMzE,GAJkB,IAAIqB,IACnBC,aACD7B,OAAOC,SAASR,MAEJqC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,OAAQ,WAC9B,IAAM1B,EAAK,UAAMwB,aAAN,sBAEP/B,IAgEV,SAAiCO,EAAeC,GAE9C0B,MAAM3B,GACHK,KAAK,SAAAuB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C/B,UAAUC,cAAc+B,MAAM7B,KAAK,SAAAC,GACjCA,EAAa6B,aAAa9B,KAAK,WAC7BV,OAAOC,SAASwC,aAKpBrC,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFAuB,CAAwBrC,EAAOC,GAI/BC,UAAUC,cAAc+B,MAAM7B,KAAK,WACjCQ,QAAQC,IACN,gHAMJf,EAAgBC,EAAOC,MC9C/BE,K","file":"static/js/main.41322976.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Footer: React.FC = () => {\r\n    return (\r\n        <div></div>\r\n    )\r\n};\r\n\r\nexport default Footer","import React from \"react\";\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <div></div>\r\n    )\r\n};\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nconst NavMenu: React.FC = () => {\r\n    return (\r\n        <div></div>\r\n    )\r\n};\r\n\r\nexport default NavMenu","import React from 'react';\r\nimport './App.css';\r\nimport Footer from './generic/footer'\r\nimport Header from \"./generic/header\";\r\nimport NavMenu from \"./generic/nav_menu\";\r\nimport {pushRotate as Menu} from 'react-burger-menu'\r\n// import * as provider from './utils/provider';\r\n// import { render } from 'react-dom';\r\n\r\nclass App extends React.Component {\r\n    // provider.getValueList('nomenclature').then((data) => {\r\n    //     console.log(data);\r\n    // }, (err) => {\r\n    //     console.log(err);\r\n    // });\r\n\r\n    showSettings(e: any) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n\r\n            <div className=\"App\">\r\n\r\n                <div id=\"outer-container\">\r\n\r\n                    <Menu pageWrapId={\"page-wrap\"} outerContainerId={\"outer-container\"} disableAutoFocus>\r\n                        <div className=\"Card\">\r\n                            <p className=\"Text\">CubaFeria</p>\r\n                            <a className=\"App-link\"\r\n                               href=\"https://github.com/UrbanuzTech/cubaferia\"\r\n                               target=\"_blank\"\r\n                               rel=\"noopener noreferrer\">\r\n                                <i className=\"fa fa-github\"> </i><br/>\r\n                                GitHub\r\n                            </a>\r\n                        </div>\r\n                        <a id=\"home\" className=\"bm-item\" href=\"/\">Continuar Facebook <i\r\n                            className=\"fa fa-facebook-square\"> </i></a>\r\n                        <a id=\"about\" className=\"bm-item\" href=\"/\">Continuar Google <i\r\n                            className=\"fa fa-google\"> </i></a>\r\n                        <a id=\"contact\" className=\"bm-item\" href=\"/\">Reg√≠strate Gratis</a>\r\n                    </Menu>\r\n\r\n                    <main id=\"page-wrap\">\r\n\r\n                        <Header/>\r\n\r\n                        <header className=\"App-header\">\r\n                            <div className=\"Card\">\r\n                                <div className=\"Text\">\r\n                                    <p>CubaFeria</p>\r\n                                    <a className=\"App-link\"\r\n                                       href=\"https://github.com/UrbanuzTech/cubaferia\"\r\n                                       target=\"_blank\"\r\n                                       rel=\"noopener noreferrer\">\r\n                                        <i className=\"fa fa-github\"> </i><br/>\r\n                                        GitHub\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </header>\r\n\r\n                        <NavMenu/>\r\n\r\n                        <Footer/>\r\n\r\n                    </main>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\nimport './assets/css/fonts-awesome.min.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}